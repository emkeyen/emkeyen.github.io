# Workflow to build and deploy a Pelican static site to GitHub Pages.
name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_call:
    inputs:
      settings:
        required: true
        description: "The path to your Pelican settings file (`pelican`'s `--settings` option), for example: 'publishconf.py'"
        type: string
      requirements:
        required: false
        default: "-r requirements.txt"
        description: "The Python requirements to install, e.g., 'pelican[markdown] typogrify' or '-r requirements.txt'"
        type: string
      output-path:
        required: false
        default: "output/"
        description: "Output directory for generated site files"
        type: string
      theme:
        required: false
        default: ""
        description: "GitHub repo URL of a custom theme"
        type: string
      python:
        required: false
        default: "3.12"
        description: "Python version to use"
        type: string
      siteurl:
        required: false
        default: ""
        description: "Base URL for the website (Pelican SITEURL)"
        type: string
      feed_domain:
        required: false
        default: ""
        description: "Domain for feed URLs (Pelican FEED_DOMAIN)"
        type: string
      deploy:
        required: false
        default: true
        description: "Whether to deploy after building"
        type: boolean

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python || '3.12' }}

      - name: Checkout theme
        if: ${{ inputs.theme != '' }}
        run: git clone '${{ inputs.theme }}' .theme

      - name: Configure GitHub Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install dependencies
        run: pip install ${{ inputs.requirements || '-r requirements.txt' }}

      - name: Build Pelican site
        shell: python
        run: |
          import os
          import subprocess

          settings = os.environ.get("INPUT_SETTINGS")
          output = os.environ.get("INPUT_OUTPUT_PATH", "output/")
          siteurl = os.environ.get("INPUT_SITEURL") or os.environ.get("BASE_URL")
          feed_domain = os.environ.get("INPUT_FEED_DOMAIN") or os.environ.get("BASE_URL")
          theme = os.environ.get("INPUT_THEME")

          cmd = [
              "pelican",
              "--settings", settings,
              "--output", output,
              "--extra-settings", f"SITEURL='{siteurl}' FEED_DOMAIN='{feed_domain}'"
          ]

          if theme:
              cmd.extend(["--theme", ".theme"])

          subprocess.run(" ".join(cmd), shell=True, check=True)

      - name: Fix file permissions
        run: |
          chmod -c -R +rX "${{ inputs.output-path || 'output/' }}" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ inputs.output-path || 'output/' }}

  deploy:
    concurrency:
      group: "pages"
      cancel-in-progress: false
    if: ${{ inputs.deploy != false }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
